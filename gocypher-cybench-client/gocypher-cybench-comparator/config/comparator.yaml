### Property File for Cybench Comparator Tool ###

# reports = location of CyBench reports folder

# token = CyBench Access Token with View Permissions
### Token can be found on the CyBench site by clicking on your username ###
### Token should be a query token with access to the specific workspace that stores your benchmarks ###

# compare.default = default comparison configurations

#compare.{} = specific comparison configurations 
### {} can be any identifier of your choice ###
### Make sure to include {package} to specify which package you want these comparisons to run on ###


### Comparison Configurations ###

# scope = (within or between project versions)
## Options {within, between} ##
### {within} will compare all benchmarks within the benchmarked version ###
### if {between} is chosen, must specify {version} (will compare benchmarked version to the specified version) ###
    ### add {version} to specify which version to compare to ###

# range = {amount of values to compare against}
## Options {all, (#)} - can specify the word "all" to compare against all values or any number X to compare against previous X recorded scores ##
    ### to compare against just the previous score within your version or the most recent score in another version, specify range '1' ###
    ### otherwise the new score will be compared against the mean of the previous X values ###

# method = how benchmarks will be compared
## Options {delta, SD} ##
### if {SD} is chosen, must specify {deviationsAllowed} ###
    ### {deviationsAllowed} = the amount of deviations you will allow your score to be away from the mean of the previous X values (X specified as {range}) ###
### if {delta} is chosen, must specify {threshold} ###
    # {threshold} = how to specify a passing benchmark 
    ## Options {percent_change, greater} ##
    ### {greater} will check to see if new score is simply greater than the compared to score ###
    ### if {percent_change} is chosen, must specify {percentageAllowed} ###
        ### {percentageAllowed} = percentage score should be within in order to pass ###
        ### ex. 5% means the new score should be within 5% of the previous threshold ###


reports: "reports/"
token: "MY TOKEN"

compare.default:
    method: "DELTA"
    scope: "BETWEEN"
    version: "1.0.0"
    range: "ALL"
    threshold: "greater"
    
compare.A:
    method: "SD"
    package: "com.my.package"
    deviationsAllowed: "1"
    scope: "WITHIN"
    
compare.B:
    package: "com.my.other.package"
    threshold: "PERCENT_CHANGE"
    percentageAllowed: "10"
    range: "2"
    