#
# Copyright (C) 2020-2021, K2N.IO.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#
#

### All the property fields that starts with name javaOptions will be used while benchmarking as JVM properties ###
### e.g. -Xmx4096m -Xms4096m -server -XX:NewSize=512M
javaOptions=

### Provide full path to java.exe to be used e.g. D:/jdk180_162/bin/java.exe ###
javaToUsePath=

### Provide jar's with JMH benchmarks which shall be executed with CyBench
benchmarks=

###  For registered users only:
# provide the bench token from your user window for the results to be visible separately in your private repository
benchAccessToken=
# provide the email address if you want the reports to be identified as sent by you and get achievement points
emailAddress=

### Benchmarks activity configuration properties ###
###  Choose if the report generated will be automatically uploaded
sendReport=true
###  Define public or private property for the uploaded report visibility
reportUploadStatus=public
###  Choose the uploaded report name ( Can be left empty if not required ).
reportName=
###  Uncomment to execute only the selected benchmarks.
###  Specify benchmarks by including fully qualified benchmark class names which are comma separated.
###  Change this only if you know what you are doing !!!
#benchmarkClasses=<fully qualified benchmark implementation class names, comma separated if multiple ones i.e. NumberBenchmarks>


### Benchmarking execution configuration properties ###
###  Change this only if you know what you are doing !!!
###  Number of separate full executions of a benchmark (warm up+measurement), this is returned still as one primary score item
numberOfBenchmarkForks=1
###  Number of measurements per benchmark operation, this is returned still as one primary score item
measurementIterations=5
###  Number of seconds dedicated for each measurement iteration
measurementSeconds=5
###  Number of iterations executed for warm up
warmUpIterations=1
###  Number of seconds dedicated for each warm up iteration
warmUpSeconds=5
###  Number of threads for benchmark test execution
runThreadCount=1
###  Benchmark modes to run
#benchmarkModes=Throughput,SingleShotTime
### JMH Runner command line arguments. See https://github.com/guozheng/jmh-tutorial/blob/master/README.md#jmh-command-line-options
jmhArguments=

### You can add your own properties by describing the property to start with user.<prop-name>, these will not be added to system properties, just to the report###
#user.propname1=
#user.propname2=

### Metadata for the categories of benchmark tests
#benchmarkMetadata=com.gocypher.cybench.launcher.CollectionsBenchmarks=category:Collections;